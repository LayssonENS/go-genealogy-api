definitions:
  domain.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  domain.Family:
    properties:
      family_connection:
        type: integer
      id:
        type: integer
      name:
        type: string
      relationship:
        type: string
      relationships:
        items:
          $ref: '#/definitions/domain.Relation'
        type: array
    type: object
  domain.Member:
    properties:
      id:
        type: integer
      members:
        items:
          $ref: '#/definitions/domain.Family'
        type: array
      name:
        type: string
    type: object
  domain.Person:
    properties:
      birth_date:
        type: string
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  domain.PersonRequest:
    properties:
      birth_date:
        type: string
      email:
        type: string
      name:
        minLength: 3
        type: string
    required:
    - email
    - name
    type: object
  domain.Relation:
    properties:
      id:
        type: integer
      name:
        type: string
      relationship:
        type: string
    type: object
  domain.Relationship:
    properties:
      children:
        type: integer
      parent:
        type: integer
    type: object
host: 0.0.0.0:9000
info:
  contact: {}
  description: This is Genealogy API in Go.
  title: Go Genealogy API
  version: "1.0"
paths:
  /v1/person:
    post:
      consumes:
      - application/json
      description: Create person
      parameters:
      - description: Payload
        in: body
        name: Payload
        required: true
        schema:
          $ref: '#/definitions/domain.PersonRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      summary: Route to create person
      tags:
      - Person
  /v1/person/{personId}:
    get:
      consumes:
      - application/json
      description: Fetch person
      parameters:
      - description: Person ID
        in: path
        name: personId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Person'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      summary: Route to fetch person by ID
      tags:
      - Person
  /v1/person/all:
    get:
      consumes:
      - application/json
      description: All people
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Person'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      summary: Route to return all people
      tags:
      - Person
  /v1/relationships/{personId}:
    get:
      consumes:
      - application/json
      description: Get relationships
      parameters:
      - description: Person ID
        in: path
        name: personId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Member'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      summary: Route to Get relationships
      tags:
      - Relationship
    post:
      consumes:
      - application/json
      description: Create relationships
      parameters:
      - description: Person ID
        in: path
        name: personId
        required: true
        type: integer
      - description: Payload
        in: body
        name: Payload
        required: true
        schema:
          $ref: '#/definitions/domain.Relationship'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      summary: Route to create relationships
      tags:
      - Relationship
schemes:
- http
swagger: "2.0"
