// Code generated by MockGen. DO NOT EDIT.
// Source: domain/relationship.go

// Package mock_domain is a generated GoMock package.
package mock_domain

import (
	reflect "reflect"

	domain "github.com/LayssonENS/go-genealogy-api/domain"
	gomock "github.com/golang/mock/gomock"
)

// MockRelationshipUseCase is a mock of RelationshipUseCase interface.
type MockRelationshipUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockRelationshipUseCaseMockRecorder
}

// MockRelationshipUseCaseMockRecorder is the mock recorder for MockRelationshipUseCase.
type MockRelationshipUseCaseMockRecorder struct {
	mock *MockRelationshipUseCase
}

// NewMockRelationshipUseCase creates a new mock instance.
func NewMockRelationshipUseCase(ctrl *gomock.Controller) *MockRelationshipUseCase {
	mock := &MockRelationshipUseCase{ctrl: ctrl}
	mock.recorder = &MockRelationshipUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRelationshipUseCase) EXPECT() *MockRelationshipUseCaseMockRecorder {
	return m.recorder
}

// CreateRelationship mocks base method.
func (m *MockRelationshipUseCase) CreateRelationship(personId int64, person domain.Relationship) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateRelationship", personId, person)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateRelationship indicates an expected call of CreateRelationship.
func (mr *MockRelationshipUseCaseMockRecorder) CreateRelationship(personId, person interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateRelationship", reflect.TypeOf((*MockRelationshipUseCase)(nil).CreateRelationship), personId, person)
}

// GetRelationshipByID mocks base method.
func (m *MockRelationshipUseCase) GetRelationshipByID(personId int64) (*domain.Member, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRelationshipByID", personId)
	ret0, _ := ret[0].(*domain.Member)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRelationshipByID indicates an expected call of GetRelationshipByID.
func (mr *MockRelationshipUseCaseMockRecorder) GetRelationshipByID(personId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRelationshipByID", reflect.TypeOf((*MockRelationshipUseCase)(nil).GetRelationshipByID), personId)
}

// MockRelationshipRepository is a mock of RelationshipRepository interface.
type MockRelationshipRepository struct {
	ctrl     *gomock.Controller
	recorder *MockRelationshipRepositoryMockRecorder
}

// MockRelationshipRepositoryMockRecorder is the mock recorder for MockRelationshipRepository.
type MockRelationshipRepositoryMockRecorder struct {
	mock *MockRelationshipRepository
}

// NewMockRelationshipRepository creates a new mock instance.
func NewMockRelationshipRepository(ctrl *gomock.Controller) *MockRelationshipRepository {
	mock := &MockRelationshipRepository{ctrl: ctrl}
	mock.recorder = &MockRelationshipRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRelationshipRepository) EXPECT() *MockRelationshipRepositoryMockRecorder {
	return m.recorder
}

// CreateRelationship mocks base method.
func (m *MockRelationshipRepository) CreateRelationship(personId int64, relationship domain.Relationship) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateRelationship", personId, relationship)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateRelationship indicates an expected call of CreateRelationship.
func (mr *MockRelationshipRepositoryMockRecorder) CreateRelationship(personId, relationship interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateRelationship", reflect.TypeOf((*MockRelationshipRepository)(nil).CreateRelationship), personId, relationship)
}

// GetRelationshipByID mocks base method.
func (m *MockRelationshipRepository) GetRelationshipByID(personId int64) (*domain.Member, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRelationshipByID", personId)
	ret0, _ := ret[0].(*domain.Member)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRelationshipByID indicates an expected call of GetRelationshipByID.
func (mr *MockRelationshipRepositoryMockRecorder) GetRelationshipByID(personId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRelationshipByID", reflect.TypeOf((*MockRelationshipRepository)(nil).GetRelationshipByID), personId)
}
